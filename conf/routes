# Calendar
GET         /                                           controllers.Kalendar.list()

GET         /events                                     controllers.Kalendar.upcomingActions()
GET         /events/:millis                             controllers.Kalendar.toDateEvents(millis: String)
GET         /events/sincenow/:millis                    controllers.Kalendar.sinceNowToDateEvents(millis: String)
GET         /storeman/event/:eventType/:id/:name        controllers.Kalendar.storemanEdit(eventType: String, id: String, name: String)
POST        /storeman/event/:eventType/:id/             controllers.Kalendar.storemanUpdate(eventType: String, id: String)


POST        /event/new                                  controllers.Kalendar.create()
POST        /event/drag                                 controllers.Kalendar.drag()

POST        /event/move/:eventType/:id                  controllers.Kalendar.move(eventType: String, id: String)

GET         /event/priceOffer/:eventType/:id            controllers.Kalendar.priceOffer(eventType: String, id: String)
GET         /event/contract/:eventType/:id              controllers.Kalendar.contract(eventType: String, id: String)

GET         /event/:eventType/:id                       controllers.Kalendar.edit(eventType: String, id: String)
POST        /event/:eventType/:id                       controllers.Kalendar.update(eventType: String, id: String)

GET         /event/delete/:eventType/:id                controllers.Kalendar.deleteModal(eventType: String, id: String)
POST        /event/delete/:eventType/:id                controllers.Kalendar.delete(eventType: String, id: String)

# StoredItem
GET         /store/items                                controllers.Store.list()
POST        /store/items                                controllers.Store.availability()
GET         /store/items/:category                      controllers.Store.listInCategory(category: String)
POST        /store/carpets                              controllers.Store.carpetsPbAvailability()

POST        /store/item                                 controllers.Store.create()
GET         /store/item                                 controllers.Store.newModal()

POST        /store/item/:id                             controllers.Store.update(id:Long)
GET         /store/item/:id                             controllers.Store.editModal(id:Long)

POST        /store/item/:id/delete                      controllers.Store.delete(id:Long)
GET         /store/item/:id/delete                      controllers.Store.deleteModal(id:Long)

POST        /store/item/:id/inc                         controllers.Store.increase(id:Long)
GET         /store/item/:id/inc                         controllers.Store.increaseModal(id:Long)

POST        /store/item/:id/dec                         controllers.Store.decrease(id:Long)
GET         /store/item/:id/dec                         controllers.Store.decreaseModal(id:Long)

#Tents
GET         /tents                                      controllers.Tents.list()

GET         /tents/new                                  controllers.Tents.neu()
POST        /tents/new                                  controllers.Tents.create()

GET         /tents/:id                                  controllers.Tents.edit(id:Long)
POST        /tents/:id                                  controllers.Tents.update(id:Long)

GET         /tents/:id/delete                           controllers.Tents.deleteModal(id:Long)
POST        /tents/:id/delete                           controllers.Tents.delete(id:Long)

# Play-authenticate routes
GET         /login                                      controllers.Application.login()
GET         /logout                                     com.feth.play.module.pa.controllers.Authenticate.logout
GET         /authenticate/:provider                     com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)
GET         /authenticate/:provider/denied              controllers.Application.oAuthDenied(provider: String)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/javascripts/routes                  controllers.Application.javascriptRoutes()
GET         /assets/*file                               controllers.Assets.at(path="/public", file)